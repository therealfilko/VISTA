services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${PORT:-8080}:${PORT:-8080}
    environment:
      APP_ENV: ${APP_ENV:-development}
      PORT: ${PORT:-8080}
      BLUEPRINT_DB_HOST: ${BLUEPRINT_DB_HOST:-psql_bp}
      BLUEPRINT_DB_PORT: ${BLUEPRINT_DB_PORT:-5432}
      BLUEPRINT_DB_DATABASE: ${BLUEPRINT_DB_DATABASE:-test_db}
      BLUEPRINT_DB_USERNAME: ${BLUEPRINT_DB_USERNAME:-test_user}
      BLUEPRINT_DB_PASSWORD: ${BLUEPRINT_DB_PASSWORD:-test_password}
      BLUEPRINT_DB_SCHEMA: ${BLUEPRINT_DB_SCHEMA:-public}
    depends_on:
      psql_bp:
        condition: service_healthy
    networks:
      - blueprint

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend_dev
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: true
    networks:
      - blueprint

  psql_bp:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${BLUEPRINT_DB_DATABASE:-test_db}
      POSTGRES_USER: ${BLUEPRINT_DB_USERNAME:-test_user}
      POSTGRES_PASSWORD: ${BLUEPRINT_DB_PASSWORD:-test_password}
    ports:
      - "${BLUEPRINT_DB_PORT:-5432}:5432"
    volumes:
      - psql_volume_bp:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${BLUEPRINT_DB_USERNAME:-test_user} -d ${BLUEPRINT_DB_DATABASE:-test_db}"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - blueprint

volumes:
  psql_volume_bp:

networks:
  blueprint:
